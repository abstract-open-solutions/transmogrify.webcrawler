[transmogrifier]
pipeline =
	webcrawler
    typerecognitor
    todrop
    templatefinder
# isindex is before moves. not sure why but it has to be
    isindex
	transform-doc
	makedoc1
	makeattachments
# treeserializer before titles so new folders get titles
    treeserializer
# want titles before relinker so get original ids    
    title_from_link
    relinker
# treeserializer before contructor to put in right order again
    treeserializer
    constructor
    schemaupdater
    publish
    workflowupdater
    browserdefault
    savepoint


[webcrawler]
blueprint = pretaweb.funnelweb.webcrawler
site_url  = %s
ignore = 
	cgi-bin
	javascript:

[todrop]
blueprint = collective.transmogrifier.sections.condition
condition: python:item.get('_mimetype') not in ['application/x-javascript','text/css','application/x-java-byte-code'] and item.get('_path','').split('.')[-1] not in ['class']

[treeserializer]
blueprint = pretaweb.funnelweb.treeserializer

[typerecognitor]
blueprint = pretaweb.funnelweb.typerecognitor

[relinker]
blueprint = pretaweb.funnelweb.relinker
link_expr = python:item.get('_type',None)=='Image' and item['_path'][:-1].endswith('image') and item['_path']+'_medium' or item.get('_type',None)=='Image' and item['_path']+'/image_web' or item['_path']

[templatefinder]
blueprint = pretaweb.funnelweb.templatefinder
auto=True



[transform-doc]
blueprint = pretaweb.funnelweb.safeportaltransforms
mimetype_field = _mimetype
target = text/html
keys = file
destination = text
condition = python:item.get("_type") in ["File"]

[makedoc1]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:Document
condition = python:item.get("_mimetype") in ["text/html"]

[title_from_link]
blueprint = pretaweb.funnelweb.backlinkstitle
ignore = 
	click
	read more

#[title_from_id]
#blueprint = collective.transmogrifier.sections.inserter
#key = string:title
#value = python: item['_path'].split('/')[-1]
#condition = python:'title' not in item and '_path' in item


[constructor]
blueprint = pretaweb.funnelweb.constructor

[schemaupdater]
blueprint = pretaweb.funnelweb.safeatschemaupdater

[workflowupdater]
blueprint = pretaweb.funnelweb.workflowupdater

[browserdefault]
blueprint = plone.app.transmogrifier.browserdefault

[moves]
blueprint = pretaweb.obrienimport.obrienmoves
moves=



[publish]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = python:['make_visible','make_public','publish']
condition = python:item.get('_type') in ['Image','File','Document','Project','Page']



[isindex]
blueprint = pretaweb.funnelweb.isindex

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 100


[makeattachments]
blueprint = pretaweb.funnelweb.makeattachments
condition = python: subitem.get('_type') in ['Image']
